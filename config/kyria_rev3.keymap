/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/* Uncomment this if using RGB - need to figure out where to put it */
&led_strip {
    chain-length = <12>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};

/*
&rgb_ug {
    color = <255 0 0>; // Default red
    brightness = <128>; // 50% brightness
    effect = <UNDERGLOW_BREATHE>; // Breathing effect
};
*/

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
            bindings = <
            &kp TAB   &kp Q &kp W &kp E &kp R &kp T                                                  &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
            &mt LCTRL ESC   &kp A &kp S &kp D &kp F &kp G                                            &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &mo 1              &mo 2   &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                                  &kp LGUI &kp DEL &mo 3 &mo 1 &kp SPACE       &kp RET &mo 2 &mo 4 &kp BSPC &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        number_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3  |  4  |  5  |                                          |  6  |  7  |  8  |  9  |  0  |  -  |
            // |       |     |     |     |     |     |                                          |     |     |     |     |     |  =  |
            // |       |     |     |     |     |     |      |      |      |      |      |      |     |     |     |     |     |     |
            //                     |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
                &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                                             &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &trans
                &trans    &trans &trans &trans &trans &trans                                             &kp UNDER &kp MINUS &trans &trans &trans &trans
                &trans &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &mo 1           &kp EQUAL &kp PLUS &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &trans
                                        &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
            >;
        };

        symbol_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |   ~   |  !  |  @  |  #  |  $  |  %  |                                          |  ^  |  &  |  *  |  (  |  )  |  -  |
            // |       |     |     |     |     |     |                                          |     |     |     |     |     |  =  |
            // |       |     |     |     |     |     |      |      |      |      |      |      |     |     |     |     |     |     |
            //                     |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
                &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                               &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp UNDER
                &trans    &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &kp EQUAL
                &trans &trans &trans &trans  &trans &trans &trans &trans                   &trans &trans &trans &trans &trans &trans &trans &trans
                                        &trans &trans &trans &trans &trans          &trans &trans &trans &trans &trans
            >;
        };

        bluetooth_layer {
            bindings = <
                &bt BT_SEL 0 &bt BT_CLR &bt BT_PRV &bt BT_NXT &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans    &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans  &trans &trans &trans &trans                   &trans &trans &trans &trans &trans &trans &trans &trans
                                        &trans &trans &trans &trans &trans          &trans &trans &trans &trans &trans
            >;
        };

        led_layer {
            bindings = <
                &rgb_ug RGB_TOG &rgb_ug  RGB_HUI &rgb_ug RGB_HUD &rgb_ug RGB_SAI &rgb_ug RGB_SAD &trans         &rgb_ug RGB_BRI &rgb_ug RGB_BRD &rgb_ug RGB_EFF &rgb_ug RGB_EFR  &trans &trans
                &trans    &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans  &trans &trans &trans &trans                   &trans &trans &trans &trans &trans &trans &trans &trans
                                        &trans &trans &trans &trans &trans          &trans &trans &trans &trans &trans
            >;
        };
    };
};
